def sum_negatives_between_max_min(arr):
    """
    –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Å—É–º–º—É –æ—Ç—Ä–∏—Ü–∞—Ç–µ–ª—å–Ω—ã—Ö —ç–ª–µ–º–µ–Ω—Ç–æ–≤ –º–µ–∂–¥—É –ø–µ—Ä–≤—ã–º–∏ –≤—Ö–æ–∂–¥–µ–Ω–∏—è–º–∏
    –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–≥–æ –∏ –º–∏–Ω–∏–º–∞–ª—å–Ω–æ–≥–æ —ç–ª–µ–º–µ–Ω—Ç–æ–≤ –º–∞—Å—Å–∏–≤–∞.
    """

    if len(arr) < 3:
        return 0, "not_enough_elements"

    value_min = min(arr)
    value_max = max(arr)

    index_min = arr.index(value_min)
    index_max = arr.index(value_max)

    # –ù–æ–≤—ã–π —Å–ª—É—á–∞–π: –º–∞–∫—Å–∏–º—É–º –∏ –º–∏–Ω–∏–º—É–º —Ä—è–¥–æ–º
    if abs(index_min - index_max) == 1:
        return 0, "max_min_adjacent"

    start_pos = min(index_min, index_max) + 1
    end_pos = max(index_min, index_max)

    if start_pos >= end_pos:
        return 0, "no_elements"

    interval_slice = arr[start_pos:end_pos]
    negatives_in_slice = [num for num in interval_slice if num < 0]

    if not negatives_in_slice:
        return 0, "no_negatives"

    negative_sum = sum(negatives_in_slice)
    return negative_sum, None


def get_valid_array():
    """
    –ó–∞–ø—Ä–∞—à–∏–≤–∞–µ—Ç —É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤–≤–æ–¥ —Ü–µ–ª—ã—Ö —á–∏—Å–µ–ª –¥–æ —Ç–µ—Ö –ø–æ—Ä, –ø–æ–∫–∞ –Ω–µ –±—É–¥–µ—Ç –≤–≤–µ–¥–µ–Ω–æ
    –º–∏–Ω–∏–º—É–º —Ç—Ä–∏ —á–∏—Å–ª–∞. –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –æ—à–∏–±–∫–∏ –≤–≤–æ–¥–∞.
    """
    while True:
        user_input = input("–í–≤–µ–¥–∏—Ç–µ —Ü–µ–ª—ã–µ —á–∏—Å–ª–∞ —á–µ—Ä–µ–∑ –ø—Ä–æ–±–µ–ª (–Ω–µ –º–µ–Ω–µ–µ —Ç—Ä—ë—Ö —á–∏—Å–µ–ª): ")
        elements = user_input.strip().split()

        if not elements:
            print("‚ùó –û—à–∏–±–∫–∞: –≤—ã –Ω–∏—á–µ–≥–æ –Ω–µ –≤–≤–µ–ª–∏. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â—ë —Ä–∞–∑.")
            continue

        try:
            arr = list(map(int, elements))
        except ValueError:
            print("‚ùó –û—à–∏–±–∫–∞: –≤—Å–µ —ç–ª–µ–º–µ–Ω—Ç—ã –¥–æ–ª–∂–Ω—ã –±—ã—Ç—å —Ü–µ–ª—ã–º–∏ —á–∏—Å–ª–∞–º–∏.")
            continue

        if len(arr) < 3:
            print(f"‚ö†Ô∏è –ú–∞–ª–æ —ç–ª–µ–º–µ–Ω—Ç–æ–≤: {len(arr)}. –í–≤–µ–¥–∏—Ç–µ –Ω–µ –º–µ–Ω–µ–µ —Ç—Ä—ë—Ö —á–∏—Å–µ–ª.")
        else:
            return arr


if __name__ == "__main__":
    print("üî¢ –ö–µ–π—Å-–∑–∞–¥–∞—á–∞ ‚Ññ1. –°—É–º–º–∞ –æ—Ç—Ä–∏—Ü–∞—Ç–µ–ª—å–Ω—ã—Ö —ç–ª–µ–º–µ–Ω—Ç–æ–≤ –º–µ–∂–¥—É max –∏ min.")
    print("–î–∞–Ω–Ω–∞—è –ø—Ä–æ–≥—Ä–∞–º–º–∞ –ø–æ–∑–≤–æ–ª—è–µ—Ç –Ω–∞–π—Ç–∏ —Å—É–º–º—É –æ—Ç—Ä–∏—Ü–∞—Ç–µ–ª—å–Ω—ã—Ö —ç–ª–µ–º–µ–Ω—Ç–æ–≤,")
    print("—Ä–∞—Å–ø–æ–ª–æ–∂–µ–Ω–Ω—ã—Ö –º–µ–∂–¥—É –º–∞–∫—Å–∏–º–∞–ª—å–Ω—ã–º –∏ –º–∏–Ω–∏–º–∞–ª—å–Ω—ã–º —ç–ª–µ–º–µ–Ω—Ç–∞–º–∏ –º–∞—Å—Å–∏–≤–∞.")
    print()
    print("üìå –§–æ—Ä–º–∞—Ç –≤–≤–æ–¥–∞:")
    print("–í–≤–µ–¥–∏—Ç–µ —Ü–µ–ª—ã–µ —á–∏—Å–ª–∞ —á–µ—Ä–µ–∑ –ø—Ä–æ–±–µ–ª (–Ω–µ –º–µ–Ω–µ–µ —Ç—Ä—ë—Ö —á–∏—Å–µ–ª).")
    print("–ü—Ä–∏–º–µ—Ä –≤–≤–æ–¥–∞: 5 -1 -4 2 -5 6 -2 0")
    print("–ü—Ä–∏–º–µ—Ä –≤—ã–≤–æ–¥–∞: 0")
    print()

    array = get_valid_array()
    result, reason = sum_negatives_between_max_min(array)
    print("üèÅ –†–µ–∑—É–ª—å—Ç–∞—Ç:", result)

    match reason:
        case "no_elements":
            print("‚ÑπÔ∏è –ü—Ä–∏–º–µ—á–∞–Ω–∏–µ: –º–µ–∂–¥—É –º–∞–∫—Å–∏–º–∞–ª—å–Ω—ã–º –∏ –º–∏–Ω–∏–º–∞–ª—å–Ω—ã–º —ç–ª–µ–º–µ–Ω—Ç–∞–º–∏ –Ω–µ—Ç —á–∏—Å–µ–ª.")
        case "no_negatives":
            print("‚ÑπÔ∏è –ü—Ä–∏–º–µ—á–∞–Ω–∏–µ: –æ—Ç—Ä–∏—Ü–∞—Ç–µ–ª—å–Ω—ã—Ö —á–∏—Å–µ–ª –º–µ–∂–¥—É max –∏ min –Ω–µ –Ω–∞–π–¥–µ–Ω–æ.")
        case "not_enough_elements":
            print("‚ö†Ô∏è –ü—Ä–∏–º–µ—á–∞–Ω–∏–µ: –≤–≤–µ–¥–µ–Ω–æ –º–µ–Ω—å—à–µ —Ç—Ä—ë—Ö —á–∏—Å–µ–ª ‚Äî –∏–Ω—Ç–µ—Ä–≤–∞–ª –æ–ø—Ä–µ–¥–µ–ª–∏—Ç—å –Ω–µ–ª—å–∑—è.")
        case "max_min_adjacent":
            print("‚ÑπÔ∏è –ü—Ä–∏–º–µ—á–∞–Ω–∏–µ: –º–∞–∫—Å–∏–º–∞–ª—å–Ω—ã–π –∏ –º–∏–Ω–∏–º–∞–ª—å–Ω—ã–π —ç–ª–µ–º–µ–Ω—Ç—ã –Ω–∞—Ö–æ–¥—è—Ç—Å—è —Ä—è–¥–æ–º ‚Äî –º–µ–∂–¥—É –Ω–∏–º–∏ –Ω–µ—Ç —á–∏—Å–µ–ª.")
        case _:
            print("‚úÖ –û—Ç—Ä–∏—Ü–∞—Ç–µ–ª—å–Ω—ã–µ —á–∏—Å–ª–∞ —É—Å–ø–µ—à–Ω–æ —É—á—Ç–µ–Ω—ã.")